import{_ as s,e as i,o as a,Z as n}from"./chunks/framework.tCCUWFfl.js";const g=JSON.parse('{"title":"前端","description":"","frontmatter":{"title":"前端","tags":["HTML","JS","CSS","ES6","NPM"],"order":2,"sidebar":true},"headers":[],"relativePath":"frontend/index.md","filePath":"frontend/index.md","lastUpdated":1687610515000}'),e={name:"frontend/index.md"},t=n(`<h1 id="frontend" tabindex="-1">FrontEnd <a class="header-anchor" href="#frontend" aria-label="Permalink to &quot;FrontEnd&quot;">​</a></h1><h2 id="获取src属性" tabindex="-1">获取src属性 <a class="header-anchor" href="#获取src属性" aria-label="Permalink to &quot;获取src属性&quot;">​</a></h2><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a.png&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> alt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(img.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getAttribute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;src&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// a.png</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(img.src) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// http://xxx/a.png</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ul><li><p><code>dom.attribute(&#39;src&#39;)</code> 获取到的永远是 <code>HTML</code> 中的元素 <code>src</code></p></li><li><p><code>dom.src</code> 获取解析之后的绝对 <code>URL</code>，即使 <code>HTML</code> 中的内容是相对 <code>URL</code></p></li><li><p>该规则同样适用于 <code>script</code>、<code>link</code> 等带有 <code>src</code>、<code>href</code> 的元素</p></li></ul>`,4),l=[t];function p(h,r,d,k,c,o){return a(),i("div",null,l)}const u=s(e,[["render",p]]);export{g as __pageData,u as default};
