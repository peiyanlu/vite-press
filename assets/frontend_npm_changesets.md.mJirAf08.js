import{_ as a,e as i,q as s,D as n,x as l,Z as p,o as t}from"./chunks/framework.tCCUWFfl.js";const F=JSON.parse('{"title":"changesets","description":"monorepo发包工具","frontmatter":{"title":"changesets","description":"monorepo发包工具","category":"monorepo","tags":["monorepo","changesets"],"order":0},"headers":[],"relativePath":"frontend/npm/changesets.md","filePath":"frontend/npm/changesets.md","lastUpdated":1688636294000}'),h={name:"frontend/npm/changesets.md"},c={id:"frontmatter-title",tabindex:"-1"},d=s("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"​",-1),o=p(`<p><code>changesets</code> 主要关心 <code>monorepo</code> 项目下子项目版本的更新、<code>changelog</code> 文件生成、包的发布。</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add @changesets/cli -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>特点</strong></p><ul><li><p>在开发时，需要开发者提供本次变更涉及的包名称、升级版本类型(<code>patch</code>、<code>minor</code>、<code>major</code>)及变更信息，即 <code>changeset</code>。</p></li><li><p>在发布版本时，会根据 <code>changeset</code> 自动升级对应包的版本号，并在对应的包中生成 <code>Changelog</code> 信息。</p></li><li><p>在 <code>Monorepo</code> 场景中，<code>changeset</code> 会自动生成仓库依赖图，升级时只会升级变更包及相关依赖包的版本号。</p></li></ul><h2 id="初始化" tabindex="-1">初始化 <a class="header-anchor" href="#初始化" aria-label="Permalink to &quot;初始化&quot;">​</a></h2><p>执行 <code>changeset init</code>，在项目根目录下生成一个 <code>.changeset</code> 目录，里面会生成一个 <code>changeset</code> 的 <code>config</code> 文件</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;$schema&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://unpkg.com/@changesets/config@2.3.0/schema.json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;changelog&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@changesets/cli/changelog&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;commit&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;fixed&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;linked&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;access&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;restricted&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;baseBranch&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;master&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;updateInternalDependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;patch&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;ignore&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: []</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ul><li><p><code>commit</code>：为 <code>true</code> 时，在执行 <code>change</code> 和 <code>version</code> 命令时，将自动执行提交代码操作</p></li><li><p><code>fixed</code>：用于 <code>monorepo</code> 中对包进行分组，相同分组中的包版本号将进行绑定，每次执行 <code>version</code> 命令时，同一分组中的包只要有一个升级版本号，其他会一起升级。支持使用正则匹配包名称。</p></li><li><p><code>linked</code>：和 <code>fixed</code> 类似，也是对 <code>monorepo</code> 中对包进行分组，但是每次执行 <code>version</code> 命令时，只有和 <code>changeset</code> 声明的变更相关的包才会升级版本号，同一分组的变更包的版本号将保持一致。支持使用正则匹配包名称。</p></li><li><p><code>access</code>：如果配置为 <code>restricted</code>，将作为私有包发布，如果为 <code>public</code>，则发布公共范围包。</p></li></ul><div class="info custom-block"><p class="custom-block-title">INFO</p><p>对于仓库中存在部分包需要配置 access，可以在 package.json 中配置 publishConfig，例如：</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;publishConfig&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;registry&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://registry.npmjs.org/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;access&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;public&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></div><ul><li><p><code>baseBranch</code>：仓库主分支。该配置用于计算当前分支的变更包并进行分类。</p></li><li><p><code>updateInternalDependencies</code>：用于声明更新内部依赖的版本号规则。当执行 <code>version</code> 命令升级版本号时，默认会自动更新仓库中使用该包的依赖声明。配置该字段为 <code>minor</code> 后，如果升级版本号为 <code>patch</code> 类型，将不会自动更新引用依赖声明。</p></li></ul><div class="info custom-block"><p class="custom-block-title">INFO</p><p>e.g.,当配置 updateInternalDependencies 为 minor 时，升级 pkg-a 至 1.0.1 时，pkg-b 中的 pkg-a 的依赖版本将不会更新，只有 pkg-a 升级版本号为 1.1.0 或者 2.0.0 时，才会更新 pkg-b 中的 pkg-a 的依赖。</p></div><ul><li><p><code>changelog</code>：配置为 <code>false</code> 时，执行 <code>version</code> 命令时，在 <code>CHANGELOG.md</code> 文件中只声明版本号，不声明其他 <code>Changelog</code> 信息。</p></li><li><p><code>ignore</code>：用于声明执行 version 命令时忽略的包，和 <code>version</code> 命令的 <code>--ignore</code> 参数用法一致，注意两者不能同时使用。</p></li></ul><h2 id="第一次发布" tabindex="-1">第一次发布 <a class="header-anchor" href="#第一次发布" aria-label="Permalink to &quot;第一次发布&quot;">​</a></h2><p>在项目根目录下直接运行下方指令为子项目发布第一个版本。发布完成后，提交代码~</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run build</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> changeset publish</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li><code>@xxx/xx</code> 形式的包会被当作私有包，默认需要以组织的方式登录，可以通过参数发布为公共包</li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> publish --access public</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><code>changeset publish</code> 时指定参数不生效，此时可以在 <code>package.json</code> 中指定配置</li></ul><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;publishConfig&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;access&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;public&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>不需要发布的包可以在 <code>package.json</code> 中设置</li></ul><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;private&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></div><h2 id="生成changeset文件" tabindex="-1">生成changeset文件 <a class="header-anchor" href="#生成changeset文件" aria-label="Permalink to &quot;生成changeset文件&quot;">​</a></h2><p>一个 <code>changeset</code> 是个包含了在某个分支或者 <code>commit</code> 上改动信息的 <code>md</code> 文件，包含的内容包括：</p><ul><li><p>本次变更涉及哪些包的变更。</p></li><li><p>本次变更需要升级的版本号类型，类型符合 <a href="./../../npm/SemVer">semver</a> 规范。</p></li><li><p>本次变更的 <code>Changelog</code> 信息。</p></li></ul><p>这个文件的本质是对包的版本和 <code>Changelog</code> 做一个预存储，我们也可以在这些文件中修改信息。</p><p><strong>模块工程方案</strong></p><p>在根目录执行 <code>pnpm changeset add</code>，选择本次变更需要升级的版本号类型，填入 <code>Changelog</code> 信息，并点击两次回车，执行完成后，将在项目的 <code>.changeset</code> 目录创建对应的 <code>changeset</code> 文件</p><p><strong>Monorepo 工程方案</strong></p><p>在根目录执行 <code>pnpm changeset add</code>，选择本次需要升级的包列表，分别选择不同版本类型对应的包，<code>changeset</code> 会询问版本号类型，如果存在包未选择这两种类型，将会默认使用 <code>patch</code> 类型，填入 <code>Changelog</code> 信息，并点击两次回车，执行完成后，将在项目的 <code>.changeset</code> 目录创建对应的 <code>changeset</code> 文件</p><div class="info custom-block"><p class="custom-block-title">INFO</p><ul><li><p>假设现在要进行迭代，我们从主分支上切一个分支出来，完成代码修改，如果需要变更记录，执行 <code>pnpm changeset add</code> 命令生成 <code>changeset</code> 文件，最后提交代码。</p></li><li><p><code>changeset</code> 文件需要一并提交到远程仓库中。在后续的新版本发布后，这些 <code>changeset</code> 文件是会被自动消耗掉的。</p></li></ul><blockquote><p><code>changesets</code> 会根据当前代码变更(<code>git diff Head...baseBranch</code>)，将 <code>Monorepo</code> 中的 <code>package</code> 分为两类，<code>changed packages</code> 和 <code>unchanged packages</code>，方便用户进行选择。</p><blockquote><p>如果当前就是主分支，代码 <code>commit</code> 之后不能区分哪些是改变的</p></blockquote></blockquote></div><p><strong>参数：</strong></p><ul><li><code>--empty</code> 添加一个空的 <code>changeset</code>。</li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> changeset add --empty</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><code>--open</code> 使用该参数时，在填写 <code>Changelog</code> 步骤会打开系统默认编辑器进行填写。</li></ul><p><strong>注意事项</strong></p><ul><li><p>不是所有的变更都需要 <code>changeset</code></p></li><li><p>如果当前变更是修改仓库的一些基础设施，比如 <code>CI</code>、测试等，就不需要添加 <code>changeset</code> 或者可以添加一个空的 <code>changeset</code>。</p></li><li><p>一个 <code>pull request</code> 可以提交多个 <code>changeset</code>。当一个 <code>pull request</code> 存在多个功能开发或者问题修复时，可以多次执行 <code>pnpm changeset add</code> 添加多个 <code>changeset</code> 文件，每个文件选择对应功能的包和添加变更信息即可。</p></li><li><p>创建 <code>changeset</code> 时，需要选择该功能相关的所有包</p></li></ul><h2 id="发布测试版本" tabindex="-1">发布测试版本 <a class="header-anchor" href="#发布测试版本" aria-label="Permalink to &quot;发布测试版本&quot;">​</a></h2><ol><li>进入 <code>pre</code> 模式</li></ol><p>执行下方命令中的一条</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> changeset pre enter alpha   # 发布 alpha 版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> changeset pre enter beta    # 发布 beta 版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> changeset pre enter rc      # 发布 rc 版本</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ol start="2"><li>修改包的版本</li></ol><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> changeset version\`</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>执行后包的版本发生变化，其他项目以来的此包的版本也相应发生变化</p><ol start="3"><li>发布测试版本</li></ol><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run build</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> changeset publish</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ol start="5"><li>退出 <code>pre</code> 模式</li></ol><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> changeset pre exit</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="发布正式版本" tabindex="-1">发布正式版本 <a class="header-anchor" href="#发布正式版本" aria-label="Permalink to &quot;发布正式版本&quot;">​</a></h2><ol><li>修改版本号</li></ol><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> changeset version</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="2"><li>发布</li></ol><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> changeset publish</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>changeset</code> 会检查当前工作区中所有包的版本是否已经被发布过，如果没有则自动发布。</p><h2 id="用法假想" tabindex="-1">用法假想 <a class="header-anchor" href="#用法假想" aria-label="Permalink to &quot;用法假想&quot;">​</a></h2><p>初次开发完毕后，直接打包、发布，提交代码到主分支 <code>master</code>；从主分支切新分支更新迭代（e.g.,例如新增 <code>dev</code> 分支，日常开发从 <code>dev</code> 切新分支），新分支开发完提交合并到 <code>dev</code>， 代码都合并到 <code>dev</code> 分支之后生成 <code>changeset</code> 文件，提交合并到主分支，在主分支修改包的版本（消耗掉 <code>changeset</code>），发布新版本（自动 <code>tag</code>）</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;scripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;turbo run build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;dev&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;turbo run dev --parallel&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;changeset:add&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;changeset add&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;changeset:version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;changeset version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;changeset:publish&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;changeset publish&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;release&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pnpm run build &amp;&amp; pnpm run changeset:add &amp;&amp; pnpm run changeset:version &amp;&amp; pnpm run changeset:publish&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,51);function r(e,k,u,g,b,E){return t(),i("div",null,[s("h1",c,[n(l(e.$frontmatter.title)+" ",1),d]),o])}const y=a(h,[["render",r]]);export{F as __pageData,y as default};
