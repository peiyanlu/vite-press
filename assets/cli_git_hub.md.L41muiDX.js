import{_ as e,e as o,o as d,Z as s}from"./chunks/framework.tCCUWFfl.js";const g=JSON.parse('{"title":"集成","description":"Git集成：GitHub、Gitee","frontmatter":{"title":"集成","description":"Git集成：GitHub、Gitee","category":"git","tags":["Git","Hub"]},"headers":[],"relativePath":"cli/git/hub.md","filePath":"cli/git/hub.md","lastUpdated":1686303485000}'),c={name:"cli/git/hub.md"},i=s(`<h1 id="github-gitee-常用操作" tabindex="-1">GitHub/Gitee 常用操作 <a class="header-anchor" href="#github-gitee-常用操作" aria-label="Permalink to &quot;GitHub/Gitee 常用操作&quot;">​</a></h1><h2 id="获取私人令牌" tabindex="-1">获取私人令牌 <a class="header-anchor" href="#获取私人令牌" aria-label="Permalink to &quot;获取私人令牌&quot;">​</a></h2><p><strong>GitHub：</strong></p><p>1、登录 <code>GitHub</code> 账号；</p><p>2、通过路径 <code>用户头像</code> → <code>Settings</code> 进入 <code>Developer setting</code>；</p><p>3、选择 <code>Personal access tokens</code> 选项后点击 <code>Generate new token</code>；</p><p>4、<code>Note</code> 字段可以随意填写；例如：<code>ACCESS_TOKEN</code>；</p><p>5、<code>Select scopes</code> 字段根据需求进行勾选；</p><ul><li><code>repo</code> 字段为必选字段，请您直接勾选；</li><li><code>admin</code>: <code>repo_hook</code> 字段为可选字段，用于自动生成 <code>webhook</code>；</li></ul><blockquote><p>当需要 <code>Gitee</code> 自动从 <code>GitHub</code> 同步仓库时，建议勾选。</p></blockquote><p>6、点击 <code>Generate token</code> 生成私人令牌；</p><p>7、复制私人令牌并妥善保管。</p><p><strong>Gitee：</strong></p><p>1、登录 <code>Gitee</code> 账号；</p><p>2、通过路径 <code>用户头像</code> → <code>设置</code> 进入 <code>私人令牌</code>；</p><p>3、点击 <code>生成新令牌</code>；</p><p>4、<code>私人令牌描述</code> 字段可以随意填写；例如：<code>ACCESS_TOKEN</code>；</p><p>5、<code>权限</code> 字段根据需求进行勾选；</p><p>6、点击 <code>提交</code> 生成私人令牌；</p><p>7、复制私人令牌并妥善保管。</p><h2 id="获取和设置-ssh" tabindex="-1">获取和设置 SSH <a class="header-anchor" href="#获取和设置-ssh" aria-label="Permalink to &quot;获取和设置 SSH&quot;">​</a></h2><p>命令行生成秘钥，得到两个文件：<code>gh-pages.pub</code> 是公钥；<code>gh-pages</code> 是私钥</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-keygen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rsa -b </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4096</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -C &quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config user.email)&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gh-pages -N &quot;&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 常用</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-keygen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rsa -C &quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config user.email)&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li><p><code>-t</code>：指定生成密钥的类型，默认使用 <code>SSH2d</code> 的 <code>rsa</code></p></li><li><p><code>-f</code>：指定生成密钥的文件名，默认 <code>id_rsa</code> （私钥 <code>id_rsa</code> ，公钥 <code>id_rsa.pub</code>）</p></li><li><p><code>-P</code>：提供旧密码，空表示不需要密码（<code>-P &#39;&#39;</code>）</p></li><li><p><code>-N</code>：提供新密码，空表示不需要密码（<code>-N &#39;&#39;</code>）</p></li><li><p><code>-b</code>：指定密钥长度（bits），<code>RSA</code> 最小要求 <code>768</code> 位，默认是 <code>2048</code> 位；<code>DSA</code> 密钥必须是 <code>1024</code> 位（<code>FIPS 1862</code> 标准规定）</p></li><li><p><code>-C</code>：提供一个新注释</p></li><li><p><code>-R hostname</code>：从 <code>known_hosts</code> （<code>.ssh</code> 目录下）文件中删除所有属于 <code>hostname</code> 的密钥</p></li></ul><hr><p><strong>GitHub：</strong></p><p>1、登录 <code>GitHub</code> 账号；</p><p>2、通过路径 <code>用户头像</code> → <code>Settings</code> 进入 <code>SSH and GPG keys</code> 配置 <code>SSH公钥</code>，点击 <code>New SSH key</code>；</p><p>3、<code>Title</code> 字段可以随意填写；例如：<code>SSH_PUBLIC_KEY</code>；</p><p>4、输入秘钥，点击 <code>Add SSH Key</code>。</p><p><strong>Gitee：</strong></p><p>1、登录 <code>Gitee</code> 账号；</p><p>2、通过路径 <code>用户头像</code> → <code>设置</code> 进入 <code>SSH公钥</code> 配置 <code>SSH公钥</code>；</p><p>3、<code>标题</code> 字段可以随意填写；例如：<code>SSH_PUBLIC_KEY</code>；</p><p>4、输入秘钥，点击 <code>确定</code>。</p><h2 id="查看秘钥文件夹位置-路径地址" tabindex="-1">查看秘钥文件夹位置（路径地址） <a class="header-anchor" href="#查看秘钥文件夹位置-路径地址" aria-label="Permalink to &quot;查看秘钥文件夹位置（路径地址）&quot;">​</a></h2><p>1、输入 <code>cd ~/.ssh</code> 进入到 <code>.ssh </code>文件夹</p><p>2、输入 <code>ls</code> 查看 <code>.ssh</code> 文件夹里面有 <code>id_rsa</code>，<code>id_rsa.pub</code>，<code>known_hosts</code> 文件</p><p>3、输入 <code>pwd</code> 查看 <code>.ssh</code> 文件路径位置地址</p><h2 id="github-设置-ssh-deploy-key" tabindex="-1">GitHub 设置 SSH Deploy Key <a class="header-anchor" href="#github-设置-ssh-deploy-key" aria-label="Permalink to &quot;GitHub 设置 SSH Deploy Key&quot;">​</a></h2><blockquote><p>在 <code>个人设置</code> 中配置了公钥就可以不用设置仓库的 <code>Deploy Key</code></p></blockquote><p>前往个人设置</p><ul><li>通过路径：<code>用户头像 → Settings -&gt; SSH and GPG keys</code> 添加公钥</li></ul><p>前往代码仓库设置</p><ul><li>通过路径： <code>仓库 -&gt; Settings -&gt; Deploy Keys</code> 添加公钥，并且勾选 <code>Allow write access</code></li></ul><p><a href="https://github.com/peaceiris/actions-gh-pages#%EF%B8%8F-create-ssh-deploy-key" target="_blank" rel="noreferrer">参考链接</a></p>`,46),a=[i];function t(p,l,n,h,r,k){return d(),o("div",null,a)}const b=e(c,[["render",t]]);export{g as __pageData,b as default};
