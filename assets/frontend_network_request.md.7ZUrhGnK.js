import{_ as c,e as t,q as e,D as d,x as l,Z as i,o as a}from"./chunks/framework.tCCUWFfl.js";const f=JSON.parse('{"title":"资源请求","description":"请求中常见的相关内容","frontmatter":{"title":"资源请求","description":"请求中常见的相关内容","category":"network","tags":["network","request"]},"headers":[],"relativePath":"frontend/network/request.md","filePath":"frontend/network/request.md","lastUpdated":1686488104000}'),r={name:"frontend/network/request.md"},p={id:"frontmatter-title",tabindex:"-1"},s=e("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"​",-1),n=i('<h2 id="跨域请求携带cookie" tabindex="-1">跨域请求携带cookie <a class="header-anchor" href="#跨域请求携带cookie" aria-label="Permalink to &quot;跨域请求携带cookie&quot;">​</a></h2><ol><li><p>前端请求时在 <code>request</code> 对象中配置 <code>withCredentials: true</code>；</p></li><li><p>后端在 <code>response</code> 的 <code>header</code> 中配置 <code>Access-Control-Allow-Credentials: true</code>；<code>Access-Control-Allow-Origin: 具体地址</code>；</p></li></ol><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>默认情况下，<code>Cookie</code> 不包括在 <code>CORS</code> 请求之中。</p><ul><li><p><code>Access-Control-Allow-Credentials</code> 的值是一个布尔值，表示是否允许发送 <code>Cookie</code>。设为 <code>true</code>，即表示服务器明确许可，<code>Cookie</code> 可以包含在请求中，一起发给服务器。 这个值也只能设为 <code>true</code>，如果服务器不要浏览器发送 <code>Cookie</code>，删除该字段即可。</p></li><li><p>开发者必须在 <code>AJAX</code> 请求中打开 <code>withCredentials</code> 属性。否则，即使服务器同意发送 <code>Cookie</code>，浏览器也不会发送。或者，服务器要求设置 <code>Cookie</code>，浏览器也不会处理。</p></li></ul></div><h2 id="预检请求" tabindex="-1">预检请求 <a class="header-anchor" href="#预检请求" aria-label="Permalink to &quot;预检请求&quot;">​</a></h2><p>预检请求（Preflight Request）是在进行跨域资源共享（CORS）时发送的一种特殊的HTTP请求。在某些情况下，浏览器会在实际的跨域请求之前发送一个预检请求，以确定实际请求是否安全并得到服务器支持。</p><p>预检请求是根据跨域请求的情况自动发送的，具体条件如下：</p><ul><li><p>使用了一些非简单的请求方法，例如 PUT、DELETE、CONNECT、OPTIONS、TRACE、PATCH。</p></li><li><p>发起跨域请求时，请求头中使用了一些非简单的自定义请求头，例如 Content-Type、Authorization 等。</p></li><li><p><code>Content-Type</code> 的值不属于下列之一: <code>application/x-www-form-urlencoded</code>、<code>multipart/form-data</code>、<code>text/plain</code></p></li><li><p>请求中的任意 <code>XMLHttpRequestUpload</code> 对象均没有注册任何事件监听器；<code>XMLHttpRequestUpload</code> 对象可以使用 <code>XMLHttpRequest.upload</code> 属性访问</p></li><li><p>请求中没有使用 <code>ReadableStream</code> 对象</p></li></ul><p>预检请求的执行过程如下：</p><ul><li><p>浏览器发送一个 <code>OPTIONS</code> 方法的请求到目标服务器。</p></li><li><p>请求头中包含了跨域请求的相关信息，例如 <code>Origin</code>、<code>Access-Control-Request-Method</code>、<code>Access-Control-Request-Headers</code>。</p></li><li><p>服务器根据请求头中的信息进行检查，判断是否允许实际请求。</p></li><li><p>服务器返回一个带有响应头 <code>Access-Control-Allow-Origin</code>（允许的源）、<code>Access-Control-Allow-Methods</code>（允许的方法）、<code>Access-Control-Allow-Headers</code>（允许的请求头）的响应。</p></li><li><p>浏览器根据服务器返回的响应进行判断，如果允许实际请求，则发送实际请求；如果不允许，则终止请求。</p></li></ul><p>通过预检请求，服务器可以控制哪些跨域请求是被允许的，从而增加了对跨域请求的安全性。同时，预检请求也可以用于传递额外的信息，例如请求头中的自定义信息。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><ul><li><p>预检请求会在实际请求之前发送，所以会增加额外的网络开销和延迟。</p></li><li><p>为了避免频繁发送预检请求，可以在服务器端配置合适的跨域许可头信息，以减少预检请求的发送次数。</p></li></ul></div><h2 id="简单请求头" tabindex="-1">简单请求头 <a class="header-anchor" href="#简单请求头" aria-label="Permalink to &quot;简单请求头&quot;">​</a></h2><p>简单请求头（<code>Simple Request Header</code>）是指在跨域请求中的请求头字段，满足特定条件的请求头被认为是简单请求头。对于简单请求头，浏览器会自动发送跨域请求，并不会触发预检请求。</p><p>判断请求头是否属于简单请求头的条件：</p><ol><li><p>请求方法（<code>HTTP Method</code>）为以下方法之一：<code>GET</code> <code>HEAD</code> <code>POST</code></p></li><li><p>请求头字段仅限于以下几种字段：<code>Accept</code> <code>Accept-Language</code> <code>Content-Language</code> <code>Content-Type</code>（仅限于下列三个值：<code>application/x-www-form-urlencoded</code>、<code>multipart/form-data</code>、<code>text/plain</code>）</p></li></ol><p>如果请求头满足上述条件，则被认为是简单请求头，浏览器会直接发送跨域请求。在简单请求中，不需要进行预检请求，并且响应中的跨域许可头（例如 <code>Access-Control-Allow-Origin</code>）会被浏览器自动处理。</p><p>简单请求头的优点是发送请求的过程更加简单和高效，不会增加额外的网络开销和延迟。</p>',17);function u(o,h,C,m,A,_){return a(),t("div",null,[e("h1",p,[d(l(o.$frontmatter.title)+" ",1),s]),n])}const T=c(r,[["render",u]]);export{f as __pageData,T as default};
